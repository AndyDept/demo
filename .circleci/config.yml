defaults: &defaults
  environment:
      - DOCKER_BUILDKIT: 1
version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.12.2
  aws-cli: circleci/aws-cli@1.3.2
  aws-ecs: circleci/aws-ecs@1.4.0
  slack: circleci/slack@4.4.0
  allure: ayte/allure@0.1.3

executors:
  ci-runner:
    docker:
      - image: circleci/python@sha256:51d0b0a859b1268c6ec7e48279cb6d0f7ddffa1676f1dd22cee54214d08cdc44


commands:

  ##################################################
  #               AWS Commands
  ##################################################

  ecr-build-push-image:
    parameters:
      tag:
        default: "snapshot.${CIRCLE_SHA1}"
        type: string
    steps:
      - setup_remote_docker:
          docker_layer_caching: false
          version: 19.03.12
      - attach_workspace:
          at: .
      - add_ssh_keys:
          fingerprints:
            - "f5:66:b7:5c:e1:02:d9:6c:f0:c5:b9:23:86:42:53:3f"
      - run:
          command: cp ~/.ssh/id_rsa .
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_DEV_ACCOUNT_URL
          aws-access-key-id: AWS_ECR_DEV_ACCESS_KEY_ID
          aws-secret-access-key: AWS_ECR_DEV_SECRET_ACCESS_KEY
          region: AWS_ECR_DEV_REGION
          repo: "automation-test-rpi"
          tag: "<<parameters.tag>>"
          attach-workspace: true

  automation-testing:
    parameters:
      group:
        type: string
      headless:
        type: string
      version:
        type: string
      allure_dir:
        type: string
    steps:
      - aws-cli/setup:
          aws-access-key-id: AWS_ECR_DEV_ACCESS_KEY_ID
          aws-secret-access-key: AWS_ECR_DEV_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
      - run: |
          set -e
          mkdir /home/circleci/project/test-results
          mkdir /home/circleci/project/allure_results
          mkdir /home/circleci/project/allure-smoke-results
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 519400232874.dkr.ecr.us-east-1.amazonaws.com
          docker run -e TEST_ENV=$TEST_ENV -e TESTING_CLIENT_ID=$TESTING_CLIENT_ID -e TESTING_CLIENT_SECRET=$TESTING_CLIENT_SECRET -e TESTING_CLIENT_NUMBER_OF_PATIENTS=$TESTING_CLIENT_NUMBER_OF_PATIENTS \
          --name tester 519400232874.dkr.ecr.us-east-1.amazonaws.com/automation-test-rpi:<<parameters.version>> group=<<parameters.group>> headless=<<parameters.headless>>

  automation-testing-staging:
    parameters:
      group:
        type: string
      headless:
        type: string
      version:
        type: string
      allure_dir:
        type: string
    steps:
      - aws-cli/setup:
          aws-access-key-id: AWS_ECR_DEV_ACCESS_KEY_ID
          aws-secret-access-key: AWS_ECR_DEV_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
      - run: |
          set -e
          mkdir /home/circleci/project/test-results
          mkdir /home/circleci/project/allure_reg_results
          mkdir /home/circleci/project/allure-smoke-results
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 519400232874.dkr.ecr.us-east-1.amazonaws.com
          docker run -e TEST_ENV=$TEST_ENV -e STAGING_CLIENT_ID=$STAGING_CLIENT_ID -e STAGING_CLIENT_SECRET=$STAGING_CLIENT_SECRET -e STAGING_CLIENT_NUMBER_OF_PATIENTS=$STAGING_CLIENT_NUMBER_OF_PATIENTS \
          --name tester 519400232874.dkr.ecr.us-east-1.amazonaws.com/automation-test-rpi:<<parameters.version>> group=<<parameters.group>> headless=<<parameters.headless>>

jobs:
  build-push-image-sha:
    executor: ci-runner
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "f5:66:b7:5c:e1:02:d9:6c:f0:c5:b9:23:86:42:53:3f"
      - run:
          command: cp ~/.ssh/id_rsa .
      - ecr-build-push-image:
          tag: "${CIRCLE_WORKFLOW_ID}"
  build-push-image-semantic:
    executor: ci-runner
    steps:
      - checkout
      - ecr-build-push-image:
          tag: "${CIRCLE_WORKFLOW_ID}"
  rpi-smoke-testing:
    machine: true
    steps:
      - allure/install
      - automation-testing:
          group: "api"
          headless: "true"
          version: "${CIRCLE_WORKFLOW_ID}"
          allure_dir: "/app/allure_smoke_results"
      - slack/notify:
          channel: "test-reports-rpi, site-release-readiness"
          event: fail
          custom: |
            {
                "blocks": [
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "Failed: $CIRCLE_USERNAME's build of \n<$CIRCLE_BUILD_URL|$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME>\n(<https://app.circleci.com/pipelines/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME?branch=$CIRCLE_BRANCH|$CIRCLE_BRANCH>) \n- <$CIRCLE_BUILD_URL|$CIRCLE_JOB> failed \n Report URL: https://reify-testing-build-results-site.s3.amazonaws.com/reify-rpi-automation/$CIRCLE_SHA1/index.html "
                        }
                    }
                ]
            }
      - slack/notify:
          channel: "test-reports-rpi, site-release-readiness"
          event: pass
          custom: |
            {
                "blocks": [
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "Passed: $CIRCLE_USERNAME's build of \n<$CIRCLE_BUILD_URL|$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME>\n(<https://app.circleci.com/pipelines/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME?branch=$CIRCLE_BRANCH|$CIRCLE_BRANCH>) \n- <$CIRCLE_BUILD_URL|$CIRCLE_JOB> passed \n Report URL: https://reify-testing-build-results-site.s3.amazonaws.com/reify-rpi-automation/$CIRCLE_SHA1/index.html "
                        }
                    }
                ]
            }
      - run:
          name: Copy Allure Results from Docker Container
          command: docker cp tester:/app/allure_results /home/circleci/project/allure_results
          when: always
      - run:
          name: Generate Allure Reports
          command: allure generate -c /home/circleci/project/allure_results/allure_results -o /home/circleci/project/allure-smoke-results
          when: always
      - run:
          command: |-
            docker run --rm -it -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_S3} \
            -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_S3} \
            -e AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION} \
            -v /home/circleci/project/allure-smoke-results:/aws amazon/aws-cli \
            s3 cp ./ s3://reify-testing-build-results/${CIRCLE_PROJECT_REPONAME}/${CIRCLE_SHA1}/ --recursive --acl bucket-owner-full-control
          when: always
      - store_artifacts:
          path: /home/circleci/project/test-results
  rpi-regression-testing:
    machine: true
    steps:
      - allure/install
      - automation-testing-staging:
          group: "api"
          headless: "true"
          version: "${CIRCLE_WORKFLOW_ID}"
          allure_dir: "/app/allure_reg_results"
      - slack/notify:
          channel: "test-reports-rpi, site-release-readiness"
          event: fail
          custom: |
            {
                "blocks": [
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "Failed: $CIRCLE_USERNAME's build of \n<$CIRCLE_BUILD_URL|$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME>\n(<https://app.circleci.com/pipelines/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME?branch=$CIRCLE_BRANCH|$CIRCLE_BRANCH>) \n- <$CIRCLE_BUILD_URL|$CIRCLE_JOB> failed \n Report URL: https://reify-testing-build-results-site.s3.amazonaws.com/reify-rpi-automation/$CIRCLE_SHA1/index.html "
                        }
                    }
                ]
            }
      - slack/notify:
          channel: "test-reports-rpi, site-release-readiness"
          event: pass
          custom: |
            {
                "blocks": [
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "Passed: $CIRCLE_USERNAME's build of \n<$CIRCLE_BUILD_URL|$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME>\n(<https://app.circleci.com/pipelines/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME?branch=$CIRCLE_BRANCH|$CIRCLE_BRANCH>) \n- <$CIRCLE_BUILD_URL|$CIRCLE_JOB> passed \n Report URL: https://reify-testing-build-results-site.s3.amazonaws.com/reify-rpi-automation/$CIRCLE_SHA1/index.html "
                        }
                    }
                ]
            }
      - run:
          name: Copy Results from Docker Container
          command: docker cp tester:/app/allure_reg_results /home/circleci/project/allure-results
          when: always
      - run:
          name: Generate Allure Reports
          command: allure generate -c /home/circleci/project/allure-results -o tester:/app/project/allure_reg_results_html
          when: always
      - run:
          command: |-
            docker run --rm -it -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_S3} \
            -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_S3} \
            -e AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION} \
            -v /home/circleci/project/test-results:/aws amazon/aws-cli \
            s3 cp ./ s3://reify-testing-build-results/${CIRCLE_PROJECT_REPONAME}/${CIRCLE_SHA1}/ --recursive --acl bucket-owner-full-control
          when: always
      - store_artifacts:
          path: /home/circleci/project/test-results

workflows:
  version: 2
  commit:
    jobs:
      - build-push-image-semantic:
          context:
            - org-global
      - rpi-smoke-testing:
          requires:
            - build-push-image-semantic
          context:
            - automated-qa-reports
            - org-global
            - testing-env-qa
          filters:
            branches:
              only: /(develop)/
  daily:
    triggers:
      - schedule:
          cron: "0 18 * * *"
          filters:
            branches:
              only: /(develop)/
    jobs:
      - build-push-image-semantic:
          context:
            - org-global
          filters:
            branches:
              only: /(develop)/
      - rpi-smoke-testing:
          requires:
            - build-push-image-semantic
          context:
            - automated-qa-reports
            - org-global
            - testing-env-qa
          filters:
            branches:
              only: /(develop)/
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only: /(main)/
    jobs:
      - build-push-image-semantic:
          context:
            - org-global
          filters:
            branches:
              only: /(main)/
      - rpi-regression-testing:
          context:
            - org-global
            - automated-qa-reports
          requires:
            - build-push-image-semantic
          filters:
            branches:
              only: /(main)/
